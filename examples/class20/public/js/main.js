/*
alice - browser
eve - running another site, that has some malicious js
bob - server (the bank)


1. alice is logged in to bank (bob's server)
2. alice goes to eve's site (in the page delivered, there's some js that runs 
on the client)
3. eve's site make a background request to bob's server
4. fortunately, browser prevents reading data from bank's bob's response
5. SOP doesn't actually PREVENT requests (just stops response being read)

csrf - cross site request forgery ^^^^^^^

csrf token

form
text input
hidden input... token value generated by the server





i want to get something from someone's api

* don't use the browser to make the request to get data
* use a commandline client (like curl... or a library like requests in python / node)
* from the server wrap that data in your own available api on your domain
* your client side scripts can access that data
*


  [data i want (someone else's api)] <---- [my server] <---- [client side js]


CORS - cross origin resource sharing
a bunch of headers in the response that tells the browser that it's ok to read this





































1. i'll generate a form
2. generate a token for that form
3. serve page to user
4. when user submits
5. server will check token... if it doesn't match or doesn't exist
   reject the action proposed by the request






*/
function handleResponse(req) {
  if(req.status >= 200 && req.status <= 300) {
    // request was successful
    console.log(req);
    const repos = JSON.parse(req.responseText);
    for(const repo of repos) {
      const div = document.createElement('div');
      div.textContent = repo.name;
      document.body.appendChild(div);
    }
    // document.body.appendChild(document.createTextNode(req.responseText));
  }
}

function handleError() {

}

function handleClick(evt) {
  const username = document.querySelector("form > [type='text']").value;
  evt.preventDefault();
  console.log(username);

  const req = new XMLHttpRequest();
  // configure it with open (does not send request)
  // req.open('GET', 'http://stats.nba.com/js/data/widgets/home_daily.json');
  req.open('GET', 'https://api.github.com/users/' + username + '/repos');
  req.addEventListener('load', () => {handleResponse(req);});
  req.addEventListener('error', handleError);
  req.send();

}

function main() {
  console.log('in main');
  // create new xhr object
  const btn = document.querySelector('form > [type="submit"]');
  btn.addEventListener('click', handleClick);
}


document.addEventListener('DOMContentLoaded', main);

















